import { Producto } from "src/productos/entities/producto.entity";
import { BeforeInsert, BeforeUpdate, Column, Entity, OneToMany, PrimaryGeneratedColumn } from "typeorm";
import { CategoriaImage } from "./categoria-image.entity";
import { ApiProperty } from "@nestjs/swagger";
import { v4 as uuid } from 'uuid';



@Entity({ name: 'categorias' })
export class Categoria {

    @PrimaryGeneratedColumn('uuid')
    @ApiProperty({
        example: "96856f1e-94f5-463b-acfa-e7f17db5770e",
        description: ' id "(autogenerated)"',
        default: uuid(),
        type: String
    })
    id: string;


    @ApiProperty({
        example: 'postres',
        description: '"nombre"',
        nullable: false,
        type: String,
    })
    @Column('text', {
        nullable: false,
        unique: true
    })
    nombre: string;


    @ApiProperty({
        example: true,
        description: '"estado"',
        default: true,
        type: Boolean,
    })
    @Column('bool', {
        default: true
    })
    estado: boolean;

    @OneToMany(
        () => Producto,
        (product) => product.categoria
    )
    producto: Producto[];


    @ApiProperty({
        example: [{
            id: '15af05aa-62d4-4b2f-ba54-3e1cb66ff5d6',
            url: '"https://loremflickr.com/640/480/abstract?lock=82631"'
        }],
        description: '"images"',
        nullable: false,
        type: () => CategoriaImage,
    })
    @OneToMany(
        () => CategoriaImage,
        (categoria_images) => categoria_images.categoria,
        { cascade: true, eager: true }
    )
    images: CategoriaImage[];


    @BeforeInsert()
    checkSlugInsert() {
        this.nombre = this.nombre.toLowerCase();
    }

    @BeforeUpdate()
    checkSlugUpdate() {
        if (this.nombre) this.nombre.toLowerCase();
    }
}
